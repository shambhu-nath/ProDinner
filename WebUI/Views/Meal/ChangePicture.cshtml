@model Meal
@{
    var gridId = ViewData["gridId"] as string;
}
<div class="awe-morebtn uploadbtn" id="dropzone">
    <input type="file" name="file" id="file1" data-url="@Url.Action("upload")" />
    <div>drag and drop here an image from your desktop or click here and select</div>
</div>

<div class="progbarw">
    <div id='progbar' class="progbar" style="width: 0%;"></div>
</div>

<div class="fl" style="width: 210px;">
    <div class="thumbhead">
        picture
    </div>
    <div class="fl thumb">
        <img id="currentPicture" src='@Url.Content("~/pictures/meals/" + (Model.Picture ?? "0.jpg"))' alt="picture" />
    </div>
    <div class="fl" style="margin: 0.6em 0">
        <form class="cropform" method="post" action='@Url.Action("crop")'>
            <input type="hidden" id="x" name="x" />
            <input type="hidden" id="y" name="y" />
            <input type="hidden" id="w" name="w" />
            <input type="hidden" id="h" name="h" />
            <input type="hidden" id="id" name="id" value="@Model.Id" />
            <input type="hidden" id="filename" name="filename" />
            @Html.AntiForgeryToken()
            <button type="submit" style="width: 200px;" class="awe-btn">save image</button>
        </form>
    </div>
    <div class='thumbhead'>
        preview
    </div>
    <div class="fl thumb" style="overflow: hidden;">
        <img src="@Url.Content(@"~/pictures/meals/0.jpg")" id="preview" alt="" />
    </div>
</div>

<div class="cropbox">
    <img id="cropbox" src="@Url.Content(@"~/pictures/meals/0.jpg")" alt="" />
</div>

<div style="float: right; width: 130px;">
    <ol>
        <li>
            upload a picture
            <br />
            (drag and drop to this big button above
            <br />
            or just click it)
        </li>
        <li>select the box to crop</li>
        <li>click "save image"</li>
        <li>hit 'esc' or click on the 'x'</li>
    </ol>
</div>

<script type="text/javascript">
    var grid = '@gridId';

    if (!window.dragovreg) {
        window.dragovreg = 1;
        $(document).bind('dragover', function (e) {
            var dropZone = $('#dropzone'),
                timeout = window.dropZoneTimeout;

            if (!timeout) {
                dropZone.addClass('in');
            } else {
                clearTimeout(timeout);
            };

            if ($(e.target).closest('#dropzone').length) {
                dropZone.addClass('hover');
            } else {
                dropZone.removeClass('hover');
            }

            window.dropZoneTimeout = setTimeout(function () {
                window.dropZoneTimeout = null;
                dropZone.removeClass('in hover');
            }, 100);
        });
    }

    var picChanged;
    function updatePic(o) {
        $('#currentPicture').attr('src', '@Url.Content("~/pictures/meals/")' + o.name + '?' + Math.random());
        picChanged = 1;
    }

    function check() {
        if ($('#filename').val().length == 0) {
            alert('select an image first');
            return false;
        }
        return true;
    }

    var id = $('#id').val();
    $('#currentPicture').closest('.awe-popup').one('aweclose', function () {
        if (picChanged) {
            if (grid) {
                utils.itemEdited(grid)({ id: id });
            } else if (window.updateMeal) {
                window.updateMeal(id); // js func from Meals/Index.cshtml
            }
        }
    });

    function setProg(v) {
        var bar = $('#progbar');
        if (!v)
            setTimeout(function () {
                bar.hide();
                bar.css('width', '0');
            }, 500);
        else {
            bar.show();
            bar.css('width', v + '%');
        }
    }

    // flag for limiting to 1 single file
    var uploading;
    $('#file1').fileupload({
        dataType: 'json',
        formData: [{ name: '__RequestVerificationToken', value: $('[name="__RequestVerificationToken"]').val() }],
        done: function (e, data) {
            var file = data.result;
            $('#cropbox, #preview').attr('src', '@Url.Content("~/pictures/temp/")' + file.name);
            $('#filename').val(file.name);
            $('#cropbox').width(file.w).height(file.h);
            if (api) api.destroy();
            var dw = file.w;
            var dh = file.h;
            docrop(dh, dw);
            setProg(0);
        },
        progressall: function (e, data) {
            var progress = parseInt(data.loaded / data.total * 100, 10);
            setProg(progress);
        },
        add: function (e, data) {
            if (!uploading) {
                uploading = 1;
                setProg(3);
                data.submit();
            }
        },
        always: function () {
            uploading = 0;
        },
        dropZone: $('#dropzone'),
        sequentialUploads: true
    });

    var api;
    function docrop(dh, dw) {
        api = $.Jcrop('#cropbox', {
            setSelect: [0, 0, 200, 150],
            onChange: function (coords) { showPreview(coords, dh, dw); },
            onSelect: function (coords) { showPreview(coords, dh, dw); },
            aspectRatio: 1.333
        });
    }

    function updateCoords(c) {
        $('#x').val(Math.round(c.x));
        $('#y').val(Math.round(c.y));
        $('#w').val(Math.round(c.w));
        $('#h').val(Math.round(c.h));
    }

    function showPreview(coords, dh, dw) {
        updateCoords(coords);

        if (parseInt(coords.w) > 0) {
            var rx = 200 / coords.w;
            var ry = 150 / coords.h;
            $('#preview').css({
                width: Math.round(rx * dw) + 'px',
                height: Math.round(ry * dh) + 'px',
                marginLeft: '-' + Math.round(rx * coords.x) + 'px',
                marginTop: '-' + Math.round(ry * coords.y) + 'px'
            });
        }
    }
</script>
@Html.Awe().Form().FormClass("cropform").Success("updatePic").BeforeSubmit("check")